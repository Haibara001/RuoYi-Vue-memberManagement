<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.memberManagement.mapper.memberFriendRequestMapper">
    
    <resultMap type="memberFriendRequest" id="memberFriendRequestResult">
        <result property="requestId"    column="request_id"    />
        <result property="fromUser"    column="from_user"    />
        <result property="toUser"    column="to_user"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectmemberFriendRequestVo">
        select request_id, from_user, to_user, status, create_time, update_by, update_time from association_friend_request
    </sql>

    <select id="selectmemberFriendRequestList" parameterType="memberFriendRequest" resultMap="memberFriendRequestResult">
        <include refid="selectmemberFriendRequestVo"/>
        <where>  
            <if test="fromUser != null "> and from_user = #{fromUser}</if>
            <if test="toUser != null "> and to_user = #{toUser}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectmemberFriendRequestByRequestId" parameterType="Long" resultMap="memberFriendRequestResult">
        <include refid="selectmemberFriendRequestVo"/>
        where request_id = #{requestId}
    </select>

    <insert id="insertmemberFriendRequest" parameterType="memberFriendRequest" useGeneratedKeys="true" keyProperty="requestId">
        insert into association_friend_request
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fromUser != null">from_user,</if>
            <if test="toUser != null">to_user,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fromUser != null">#{fromUser},</if>
            <if test="toUser != null">#{toUser},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatememberFriendRequest" parameterType="memberFriendRequest">
        update association_friend_request
        <trim prefix="SET" suffixOverrides=",">
            <if test="fromUser != null">from_user = #{fromUser},</if>
            <if test="toUser != null">to_user = #{toUser},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where request_id = #{requestId}
    </update>

    <delete id="deletememberFriendRequestByRequestId" parameterType="Long">
        delete from association_friend_request where request_id = #{requestId}
    </delete>

    <delete id="deletememberFriendRequestByRequestIds" parameterType="String">
        delete from association_friend_request where request_id in 
        <foreach item="requestId" collection="array" open="(" separator="," close=")">
            #{requestId}
        </foreach>
    </delete>
</mapper>